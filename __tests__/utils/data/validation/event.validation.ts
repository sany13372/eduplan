import { invalidFormat, maxLengthExceeded, required } from '@utils/validation';

import { DataGenerator } from '../generator.data';
import { DateFormat } from '../model/enums/dateFormat';
import { CommonHelper } from '../../common.helper';

const generate = new DataGenerator();
const helper = new CommonHelper();

export const EVENT_VALIDATION_DATA = [
  {
    name: 'Обязательные значения',
    title: { value: '', message: required() },
    service: { value: '', message: required() },
    place: { value: '', message: required() },
    link: { value: '', message: null },
    description: { value: '', message: null },
    date: { value: '', message: required() },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
    endAt: { value: helper.getDateInFormat(generate.date({ hours: 2 }), DateFormat.HHmm), message: null },
  },
  {
    name: 'Обязательное значение - «Ссылка»',
    title: { value: generate.words(2), message: null },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.streetAddress(), message: null },
    link: { value: '', message: required() },
    description: { value: generate.paragraph(), message: null },
    date: { value: helper.getDateInFormat(generate.date({ month: 1 }), DateFormat.ddMMyyyy), message: null },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
    endAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
  },
  {
    name: 'Обязательное значение - «Время начала»',
    title: { value: generate.words(2), message: null },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.streetAddress(), message: null },
    link: { value: generate.url(), message: null },
    description: { value: generate.paragraph(), message: null },
    date: { value: helper.getDateInFormat(generate.date({ month: 1 }), DateFormat.ddMMyyyy), message: null },
    startAt: { value: '', message: required() },
    endAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
  },
  {
    name: 'Обязательньное значение - «Время окончания»',
    title: { value: generate.words(2), message: null },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.streetAddress(), message: null },
    link: { value: generate.url(), message: null },
    description: { value: generate.paragraph(), message: null },
    date: { value: helper.getDateInFormat(generate.date({ month: 1 }), DateFormat.ddMMyyyy), message: null },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
    endAt: { value: '', message: required() },
  },
  {
    name: 'Запредельные значения',
    title: { value: generate.word(256), message: maxLengthExceeded() },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.word(256), message: maxLengthExceeded() },
    link: { value: generate.word(256), message: maxLengthExceeded() },
    description: { value: generate.word(65001), message: maxLengthExceeded() },
    date: { value: helper.getDateInFormat(generate.date({ month: 1 }), DateFormat.ddMMyyyy), message: null },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
    endAt: { value: helper.getDateInFormat(generate.date({ hours: 2 }), DateFormat.HHmm), message: null },
  },
  {
    name: 'Недоступные спецсимволы',
    title: { value: generate.emoji(), message: invalidFormat() },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.emoji(), message: invalidFormat() },
    link: { value: generate.url(), message: null },
    description: { value: generate.paragraph(), message: null },
    date: { value: helper.getDateInFormat(generate.date({ month: 1 }), DateFormat.ddMMyyyy), message: null },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
    endAt: { value: helper.getDateInFormat(generate.date({ hours: 2 }), DateFormat.HHmm), message: null },
  },
  {
    name: 'Прошедшая дата события',
    title: { value: generate.words(2), message: null },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.streetAddress(), message: null },
    link: { value: generate.url(), message: null },
    description: { value: generate.paragraph(), message: null },
    date: {
      value: helper.getDateInFormat(generate.date({ month: -1 }), DateFormat.ddMMyyyy),
      message: 'Дата события уже прошла',
    },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
    endAt: { value: helper.getDateInFormat(generate.date({ hours: 2 }), DateFormat.HHmm), message: null },
  },
  {
    name: 'Прошедшее время начала события',
    title: { value: generate.words(2), message: null },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.streetAddress(), message: null },
    link: { value: generate.url(), message: null },
    description: { value: generate.paragraph(), message: null },
    date: { value: helper.getDateInFormat(generate.date({}), DateFormat.ddMMyyyy), message: null },
    startAt: {
      value: helper.getDateInFormat(generate.date({ hours: -1 }), DateFormat.HHmm),
      message: 'Невозможно указать прошедшее время',
    },
    endAt: { value: '', message: null },
  },
  {
    name: 'Прошедшее время окончания события',
    title: { value: generate.words(2), message: null },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.streetAddress(), message: null },
    link: { value: generate.url(), message: null },
    description: { value: generate.paragraph(), message: null },
    date: { value: helper.getDateInFormat(generate.date({}), DateFormat.ddMMyyyy), message: null },
    startAt: { value: '', message: null },
    endAt: {
      value: helper.getDateInFormat(generate.date({ hours: -1 }), DateFormat.HHmm),
      message: 'Невозможно указать прошедшее время',
    },
  },
  {
    name: 'Время окончания раньше начала',
    title: { value: generate.words(2), message: null },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.streetAddress(), message: null },
    link: { value: generate.url(), message: null },
    description: { value: generate.paragraph(), message: null },
    date: { value: helper.getDateInFormat(generate.date({ month: 1 }), DateFormat.ddMMyyyy), message: null },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 2 }), DateFormat.HHmm), message: null },
    endAt: {
      value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm),
      message: 'Время окончания не может быть раньше времени начала',
    },
  },
  {
    name: 'Только пробелы',
    title: { value: ' ', message: required() },
    service: { value: 'Другой сервис', message: null },
    place: { value: ' ', message: required() },
    link: { value: ' ', message: required() },
    description: { value: ' ', message: null },
    date: { value: helper.getDateInFormat(generate.date({ month: 1 }), DateFormat.ddMMyyyy), message: null },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
    endAt: { value: helper.getDateInFormat(generate.date({ hours: 2 }), DateFormat.HHmm), message: null },
  },
  {
    name: 'Граничные значения',
    title: { value: generate.word(255), message: null },
    service: { value: 'Другой сервис', message: null },
    place: { value: generate.word(255), message: null },
    link: { value: generate.word(255), message: null },
    description: { value: generate.word(65000), message: null },
    date: { value: helper.getDateInFormat(generate.date({ month: 1 }), DateFormat.ddMMyyyy), message: null },
    startAt: { value: helper.getDateInFormat(generate.date({ hours: 1 }), DateFormat.HHmm), message: null },
    endAt: { value: helper.getDateInFormat(generate.date({ hours: 2 }), DateFormat.HHmm), message: null },
  },
];
